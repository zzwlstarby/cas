description = "Apereo CAS Core Configuration Model"
def skipConfigurationMetadata = Boolean.getBoolean("skipNestedConfigMetadataGen")

ext {
    useJunit5 = true
}

dependencies {
    implementation libraries.jasypt
    implementation libraries.bouncycastle

    compile libraries.springbootconfigmetadata

    api project(":api:cas-server-core-api-util")
    api project(":api:cas-server-core-api-authentication")
    api project(":api:cas-server-core-api-webflow")
    
    testImplementation libraries.springbootconfigmetadata
    
    compileOnly libraries.javaparser
    
    if (!skipConfigurationMetadata) {
        annotationProcessor libraries.springbootconfigmetadata
    }
}

if (!skipConfigurationMetadata) {
    task generateConfigurationMetadata(type: JavaExec) {
        doFirst {
            logger.info "\nRunning CAS Spring configuration metadata processor in addition to the native " +
                    "Spring Boot metadata processor, to create configuration " +
                    "metadata for nested and indexed properties. The process starts with the build directory " +
                    "at [$buildDir] for the CAS configuration module at [$projectDir.canonicalPath].\n"
        }
        main = "org.apereo.cas.configuration.metadata.ConfigurationMetadataGenerator"
        classpath = sourceSets.main.compileClasspath + sourceSets.main.runtimeClasspath
        args buildDir, projectDir.canonicalPath
    }

    compileJava.dependsOn(processResources)
    jar.dependsOn(generateConfigurationMetadata)


}
